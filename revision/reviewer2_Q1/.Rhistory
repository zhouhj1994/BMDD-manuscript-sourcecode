) ,
label.position = "right",
label.theme = element_text(),
title = NULL,
label.theme = element_text()) +
labs(title = expression(alpha[0]), x = "True value", y = "Estimated value") +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12)) +
guides(color = guide_legend(label = TRUE, override.aes = list(size = 4))) +
theme(legend.title = element_blank()) +
scale_color_discrete(labels = scales::parse_format())
df <- data.frame(alp0, alp1, pi, alp0.est, alp1.est, pi.est)
library(ggplot2)
library(dplyr)
library(patchwork)
# Highlight points where |alpha1 - alpha0| < 0.5
df <- df %>%
mutate(highlight = ifelse(abs(alp1 - alp0) < 0.5, "lt", "gt"))
# Define colors
colors <- c("lt" = "red", "gt" = "grey")
# --- Plot 1: alp0 vs alp0.est ---
p1 <- ggplot(df, aes(x = alp0, y = alp0.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = colors,
labels = c("lt" = "|alpha[0]-alpha[1]|<0.5",
"gt" = "|alpha[0]-alpha[1]|>0.5")) +
guides(color = guide_legend(label = TRUE,
label.theme = element_text(size = 12),
override.aes = list(size = 4),
label.hjust = 0,
title = NULL,
label.position = "right",
label.theme = element_text(),
) ,
label.position = "right",
label.theme = element_text(),
title = NULL,
label.theme = element_text()) +
labs(title = expression(alpha[0]), x = "True value", y = "Estimated value") +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12)) +
guides(color = guide_legend(label = TRUE, override.aes = list(size = 4))) +
theme(legend.title = element_blank()) +
scale_color_discrete(labels = scales::parse_format())
df <- data.frame(alp0, alp1, pi, alp0.est, alp1.est, pi.est)
library(ggplot2)
library(dplyr)
library(patchwork)
# Highlight points where |alpha1 - alpha0| < 0.5
df <- df %>%
mutate(highlight = ifelse(abs(alp1 - alp0) < 0.5, "lt", "gt"))
# Define colors
colors <- c("lt" = "red", "gt" = "grey")
# Define labels as strings (will be parsed as math)
labels <- c("lt" = "|alpha[0]-alpha[1]|<0.5",
"gt" = "|alpha[0]-alpha[1]|>0.5")
# --- Plot 1: alp0 vs alp0.est ---
p1 <- ggplot(df, aes(x = alp0, y = alp0.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = colors, labels = labels) +
guides(color = guide_legend(override.aes = list(size = 4), label = TRUE)) +
labs(title = expression(alpha[0]), x = "True value", y = "Estimated value") +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12)) +
scale_color_manual(labels = scales::parse_format(), values = colors)
# --- Plot 2: alp1 vs alp1.est ---
p2 <- ggplot(df, aes(x = alp1, y = alp1.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = colors, labels = labels) +
scale_color_manual(labels = scales::parse_format(), values = colors) +
labs(title = expression(alpha[1]), x = "True value", y = "Estimated value") +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12))
# --- Plot 3: pi.est only ---
p3 <- ggplot(df, aes(x = seq_along(pi.est), y = pi.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
scale_color_manual(values = colors, labels = labels) +
scale_color_manual(labels = scales::parse_format(), values = colors) +
labs(title = expression(pi), x = "Index", y = "Estimated value") +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12))
# --- Combine plots with shared legend ---
(p1 | p2 | p3) + plot_layout(guides = "collect") & theme(legend.title = element_blank())
library(ggplot2)
library(dplyr)
library(patchwork)
# Highlight points with math-friendly labels
df <- df %>%
mutate(highlight = factor(ifelse(abs(alp1 - alp0) < 0.5,
"|alpha[0]-alpha[1]|<0.5",
"|alpha[0]-alpha[1]|>0.5")))
# Map factor levels to colors
colors <- c("|alpha[0]-alpha[1]|<0.5" = "red",
"|alpha[0]-alpha[1]|>0.5" = "grey")
# --- Plot 1: alp0 vs alp0.est ---
p1 <- ggplot(df, aes(x = alp0, y = alp0.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = colors, labels = scales::parse_format) +
labs(title = expression(alpha[0]), x = "True value", y = "Estimated value", color = NULL) +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12))
# --- Plot 2: alp1 vs alp1.est ---
p2 <- ggplot(df, aes(x = alp1, y = alp1.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = colors, labels = scales::parse_format) +
labs(title = expression(alpha[1]), x = "True value", y = "Estimated value", color = NULL) +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12))
# --- Plot 3: pi.est only ---
p3 <- ggplot(df, aes(x = seq_along(pi.est), y = pi.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
scale_color_manual(values = colors, labels = scales::parse_format) +
labs(title = expression(pi), x = "Index", y = "Estimated value", color = NULL) +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12))
# --- Combine plots with shared legend ---
(p1 | p2 | p3) + plot_layout(guides = "collect") & theme(legend.title = element_blank())
library(ggplot2)
library(dplyr)
library(patchwork)
# Create highlight factor with math-friendly strings
df <- df %>%
mutate(highlight = factor(ifelse(abs(alp1 - alp0) < 0.5,
"|alpha[0]-alpha[1]|<0.5",
"|alpha[0]-alpha[1]|>0.5")))
# Define colors
colors <- c("|alpha[0]-alpha[1]|<0.5" = "red",
"|alpha[0]-alpha[1]|>0.5" = "grey")
# --- Plot 1: alp0 vs alp0.est ---
p1 <- ggplot(df, aes(x = alp0, y = alp0.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = colors, labels = scales::parse_format) +
labs(title = expression(alpha[0]), x = "True value", y = "Estimated value", color = NULL) +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12))
# --- Plot 2: alp1 vs alp1.est ---
p2 <- ggplot(df, aes(x = alp1, y = alp1.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = colors, labels = scales::parse_format) +
labs(title = expression(alpha[1]), x = "True value", y = "Estimated value", color = NULL) +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12))
# --- Plot 3: pi.est only ---
p3 <- ggplot(df, aes(x = seq_along(pi.est), y = pi.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
scale_color_manual(values = colors, labels = scales::parse_format) +
labs(title = expression(pi), x = "Index", y = "Estimated value", color = NULL) +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12))
# --- Combine plots with shared legend ---
(p1 | p2 | p3) + plot_layout(guides = "collect") & theme(legend.title = element_blank())
library(ggplot2)
library(dplyr)
library(patchwork)
# Create factor with math-expression strings
df <- df %>%
mutate(highlight = factor(ifelse(abs(alp1 - alp0) < 0.5,
"|alpha[0]-alpha[1]|<0.5",
"|alpha[0]-alpha[1]|>0.5")))
# Map colors to factor levels
colors <- c("|alpha[0]-alpha[1]|<0.5" = "red",
"|alpha[0]-alpha[1]|>0.5" = "grey")
# --- Plot 1 ---
p1 <- ggplot(df, aes(x = alp0, y = alp0.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = colors, labels = scales::parse_format) +
labs(title = expression(alpha[0]), x = "True value", y = "Estimated value") +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12), legend.title = element_blank())
# --- Plot 2 ---
p2 <- ggplot(df, aes(x = alp1, y = alp1.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = colors, labels = scales::parse_format) +
labs(title = expression(alpha[1]), x = "True value", y = "Estimated value") +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12), legend.title = element_blank())
# --- Plot 3 ---
p3 <- ggplot(df, aes(x = seq_along(pi.est), y = pi.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
scale_color_manual(values = colors, labels = scales::parse_format) +
labs(title = expression(pi), x = "Index", y = "Estimated value") +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12), legend.title = element_blank())
# --- Combine plots with shared legend ---
(p1 | p2 | p3) + plot_layout(guides = "collect")
df <- data.frame(alp0, alp1, pi, alp0.est, alp1.est, pi.est)
library(ggplot2)
library(dplyr)
library(patchwork)
# Create factor with math-expression strings
df <- df %>%
mutate(highlight = factor(ifelse(abs(alp1 - alp0) < 0.5,
"|alpha[0]-alpha[1]|<0.5",
"|alpha[0]-alpha[1]|>0.5")))
# Map colors to factor levels
colors <- c("|alpha[0]-alpha[1]|<0.5" = "red",
"|alpha[0]-alpha[1]|>0.5" = "grey")
# --- Plot 1 ---
p1 <- ggplot(df, aes(x = alp0, y = alp0.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = colors, labels = scales::parse_format) +
labs(title = expression(alpha[0]), x = "True value", y = "Estimated value") +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12), legend.title = element_blank())
# --- Plot 2 ---
p2 <- ggplot(df, aes(x = alp1, y = alp1.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = colors, labels = scales::parse_format) +
labs(title = expression(alpha[1]), x = "True value", y = "Estimated value") +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12), legend.title = element_blank())
# --- Plot 3 ---
p3 <- ggplot(df, aes(x = seq_along(pi.est), y = pi.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
scale_color_manual(values = colors, labels = scales::parse_format) +
labs(title = expression(pi), x = "Index", y = "Estimated value") +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12), legend.title = element_blank())
# --- Combine plots with shared legend ---
(p1 | p2 | p3) + plot_layout(guides = "collect")
df <- data.frame(alp0, alp1, pi, alp0.est, alp1.est, pi.est)
library(ggplot2)
library(dplyr)
library(patchwork)
# Highlight points with math-expression strings as factor levels
df <- df %>%
mutate(highlight = factor(ifelse(abs(alp1 - alp0) < 0.5,
"|alpha[0]-alpha[1]|<0.5",
"|alpha[0]-alpha[1]|>0.5")))
# Map colors to factor levels
colors <- c("|alpha[0]-alpha[1]|<0.5" = "red",
"|alpha[0]-alpha[1]|>0.5" = "grey")
# --- Plot 1: alp0 vs alp0.est ---
p1 <- ggplot(df, aes(x = alp0, y = alp0.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = colors) +       # only colors here
guides(color = guide_legend(label = scales::parse_format)) +  # parse math expressions
labs(title = expression(alpha[0]), x = "True value", y = "Estimated value") +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12), legend.title = element_blank())
# --- Plot 2: alp1 vs alp1.est ---
p2 <- ggplot(df, aes(x = alp1, y = alp1.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = colors) +
guides(color = guide_legend(label = scales::parse_format)) +
labs(title = expression(alpha[1]), x = "True value", y = "Estimated value") +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12), legend.title = element_blank())
# --- Plot 3: pi.est only ---
p3 <- ggplot(df, aes(x = seq_along(pi.est), y = pi.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
scale_color_manual(values = colors) +
guides(color = guide_legend(label = scales::parse_format)) +
labs(title = expression(pi), x = "Index", y = "Estimated value") +
theme_bw(base_size = 14) +
theme(legend.text = element_text(size = 12), legend.title = element_blank())
# --- Combine plots with shared legend ---
(p1 | p2 | p3) + plot_layout(guides = "collect")
library(ggplot2)
library(dplyr)
library(patchwork)
# Add a column to indicate points for highlighting
df <- df %>%
mutate(highlight = ifelse(abs(alp1 - alp0) < 0.2,
"|alpha0 - alpha1| < 0.2",
"|alpha0 - alpha1| > 0.2"))
# --- Plot 1: alp0 vs alp0.est ---
p1 <- ggplot(df, aes(x = alp0, y = alp0.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = c("|alpha0 - alpha1| < 0.2" = "red",
"|alpha0 - alpha1| > 0.2" = "grey")) +
labs(title = expression(alpha[0]),
x = "True value", y = "Estimated value",
color = NULL) +
theme_bw(base_size = 14)
# --- Plot 2: alp1 vs alp1.est ---
p2 <- ggplot(df, aes(x = alp1, y = alp1.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = c("|alpha0 - alpha1| < 0.2" = "red",
"|alpha0 - alpha1| > 0.2" = "grey")) +
labs(title = expression(alpha[1]),
x = "True value", y = "Estimated value",
color = NULL) +
theme_bw(base_size = 14)
# --- Plot 3: pi.est only ---
p3 <- ggplot(df, aes(x = seq_along(pi.est), y = pi.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
scale_color_manual(values = c("|alpha0 - alpha1| < 0.2" = "red",
"|alpha0 - alpha1| > 0.2" = "grey")) +
labs(title = expression(pi),
x = "Index", y = "Estimated value",
color = NULL) +
theme_bw(base_size = 14)
# --- Arrange side by side with shared legend ---
(p1 | p2 | p3) + plot_layout(guides = "collect") & theme(legend.title = element_blank())
df <- df %>%
mutate(highlight = ifelse(abs(alp1 - alp0) < 0.6,
"|alpha0 - alpha1| < 0.6",
"|alpha0 - alpha1| > 0.6"))
# --- Plot 1: alp0 vs alp0.est ---
p1 <- ggplot(df, aes(x = alp0, y = alp0.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = c("|alpha0 - alpha1| < 0.6" = "red",
"|alpha0 - alpha1| > 0.6" = "grey")) +
labs(title = expression(alpha[0]),
x = "True value", y = "Estimated value",
color = NULL) +
theme_bw(base_size = 14)
# --- Plot 2: alp1 vs alp1.est ---
p2 <- ggplot(df, aes(x = alp1, y = alp1.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = c("|alpha0 - alpha1| < 0.6" = "red",
"|alpha0 - alpha1| > 0.6" = "grey")) +
labs(title = expression(alpha[1]),
x = "True value", y = "Estimated value",
color = NULL) +
theme_bw(base_size = 14)
# --- Plot 3: pi.est only ---
p3 <- ggplot(df, aes(x = seq_along(pi.est), y = pi.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
scale_color_manual(values = c("|alpha0 - alpha1| < 0.6" = "red",
"|alpha0 - alpha1| > 0.6" = "grey")) +
labs(title = expression(pi),
x = "Index", y = "Estimated value",
color = NULL) +
theme_bw(base_size = 14)
# --- Arrange side by side with shared legend ---
(p1 | p2 | p3) + plot_layout(guides = "collect") & theme(legend.title = element_blank())
df <- data.frame(alp0, alp1, pi, alp0.est, alp1.est, pi.est)
library(ggplot2)
library(dplyr)
library(patchwork)
# Add a column to indicate points for highlighting
df <- df %>%
mutate(highlight = ifelse(abs(alp1 - alp0) < 0.5,
"|alpha0 - alpha1| < 0.5",
"|alpha0 - alpha1| > 0.5"))
# --- Plot 1: alp0 vs alp0.est ---
p1 <- ggplot(df, aes(x = alp0, y = alp0.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = c("|alpha0 - alpha1| < 0.5" = "red",
"|alpha0 - alpha1| > 0.5" = "grey")) +
labs(title = expression(alpha[0]),
x = "True value", y = "Estimated value",
color = NULL) +
theme_bw(base_size = 14)
# --- Plot 2: alp1 vs alp1.est ---
p2 <- ggplot(df, aes(x = alp1, y = alp1.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = c("|alpha0 - alpha1| < 0.5" = "red",
"|alpha0 - alpha1| > 0.5" = "grey")) +
labs(title = expression(alpha[1]),
x = "True value", y = "Estimated value",
color = NULL) +
theme_bw(base_size = 14)
# --- Plot 3: pi.est only ---
p3 <- ggplot(df, aes(x = seq_along(pi.est), y = pi.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
scale_color_manual(values = c("|alpha0 - alpha1| < 0.5" = "red",
"|alpha0 - alpha1| > 0.5" = "grey")) +
labs(title = expression(pi),
x = "Index", y = "Estimated value",
color = NULL) +
theme_bw(base_size = 14)
# --- Arrange side by side with shared legend ---
pdf("check_the_estimates.pdf", width = 22, height = 8)
(p1 | p2 | p3) + plot_layout(guides = "collect") & theme(legend.title = element_blank())
dev.off()
df <- data.frame(alp0, alp1, pi, alp0.est, alp1.est, pi.est)
library(ggplot2)
library(dplyr)
library(patchwork)
# Highlight points where |alpha1 - alpha0| < 0.5
df <- df %>%
mutate(highlight = ifelse(abs(alp1 - alp0) < 0.5,
"|alpha0 - alpha1| < 0.5",
"|alpha0 - alpha1| > 0.5"))
# Define common colors
colors <- c("|alpha0 - alpha1| < 0.5" = "red",
"|alpha0 - alpha1| > 0.5" = "grey")
# Text sizes
tick_size <- 16
axis_size <- 18
title_size <- 20
legend_size <- 16
# --- Plot 1 ---
p1 <- ggplot(df, aes(x = alp0, y = alp0.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = colors) +
labs(title = expression(alpha[0]), x = "True value", y = "Estimated value", color = NULL) +
theme_bw(base_size = 14) +
theme(
axis.text = element_text(size = tick_size),
axis.title = element_text(size = axis_size),
plot.title = element_text(size = title_size, hjust = 0.5),
legend.text = element_text(size = legend_size),
legend.title = element_blank()
)
# --- Plot 2 ---
p2 <- ggplot(df, aes(x = alp1, y = alp1.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_manual(values = colors) +
labs(title = expression(alpha[1]), x = "True value", y = "Estimated value", color = NULL) +
theme_bw(base_size = 14) +
theme(
axis.text = element_text(size = tick_size),
axis.title = element_text(size = axis_size),
plot.title = element_text(size = title_size, hjust = 0.5),
legend.text = element_text(size = legend_size),
legend.title = element_blank()
)
# --- Plot 3 ---
p3 <- ggplot(df, aes(x = seq_along(pi.est), y = pi.est, color = highlight)) +
geom_point(size = 3, alpha = 0.7) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "red") +
scale_color_manual(values = colors) +
labs(title = expression(pi), x = "Index", y = "Estimated value", color = NULL) +
theme_bw(base_size = 14) +
theme(
axis.text = element_text(size = tick_size),
axis.title = element_text(size = axis_size),
plot.title = element_text(size = title_size, hjust = 0.5),
legend.text = element_text(size = legend_size),
legend.title = element_blank()
)
# --- Save to PDF with shared legend ---
pdf("check_the_estimates.pdf", width = 22, height = 8)
(p1 | p2 | p3) + plot_layout(guides = "collect") & theme(legend.title = element_blank())
dev.off()
bmdd_fit_on_combo <- readRDS("bmdd_fit_on_combo.rds")
fit <- bmdd_fit_on_combo$res[[1]]
pi <- fit$pi
alp0 <- fit$alpha$alp0
alp1 <- fit$alpha$alp1
ind <- which(alp0 > alp1)
tmp <- alp0[ind]
alp0[ind] <- alp1[ind]
alp1[ind] <- tmp
pi[ind] <- 1 - pi[ind]
m <- 100
n <- 80
pdf("bmdd_fit_on_combo_plot.pdf", width = 11, height = 8)
df <- data.frame(alp0, alp1, pi)
library(ggplot2)
library(grid)
# Calculate statistics directly from df
means <- sapply(df, mean)
medians <- sapply(df, median)
# Base ggplot
p <- ggplot(df, aes(x = alp0, y = alp1, size = pi)) +
geom_point(alpha = 0.7, color = 'gray') +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
scale_color_viridis_c() +
labs(
x = expression(alpha[0]),
y = expression(alpha[1]),
color = expression(pi),
size = expression(pi)
) +
theme_minimal() +
theme(
axis.title      = element_text(size = 18),  # axis label
axis.text       = element_text(size = 14),  # tick labels
legend.title    = element_text(size = 16),  # legend title
legend.text     = element_text(size = 14),  # legend labels
plot.margin     = margin(15, 15, 15, 15)   # margin around plot
)
# Draw the plot
print(p)
# Add multi-line annotation using grid.text() with math symbols
grid.text(
label = bquote(
Mean(alpha[0]) == .(round(means["alp0"],2)) ~ "\n" ~
Median(alpha[0]) == .(round(medians["alp0"],2)) ~ "\n" ~
Mean(alpha[1]) == .(round(means["alp1"],2)) ~ "\n" ~
Median(alpha[1]) == .(round(medians["alp1"],2)) ~ "\n" ~
Mean(pi) == .(round(means["pi"],2)) ~ "\n" ~
Median(pi) == .(round(medians["pi"],2))
),
x = 0.95, y = 0.95, just = c("right","top"), gp = gpar(cex = 1.2)
)
dev.off()
